# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_call:
    inputs:
      packages:
        description: "Additional package list"
        type: string
        default: "autopoint, desktop-file-utils"
  workflow_dispatch:

# A workflow run is made up of jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-latest

    strategy:
      matrix:
        container: ["fedora:37", "ubuntu:jammy"]

    container:
      image: ${{ matrix.container }}

    # Steps represent a sequence of tasks as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      # https://github.com/actions/checkout
      # https://github.com/actions/github-script
      - uses: actions/checkout@v2
        with:
          repository: ibus/ibus
          fetch-depth: 200

      - name: Checkout
        run: |
          pwd
          echo $GITHUB_WORKSPACE
          #ls -a ${{ github.workspace }}
          ls -a
          git fetch --prune --unshallow --tags
          #env GIT_PAGER=cat git tag
          #env GIT_PAGER=cat git log

      # list from string array
      # https://github.com/marketplace/actions/create-list-from-string-array
      - name: Prepare required packges
        id: packages
        uses: lucaspinheirogit/list-from-string-array-action@v1.4.3
        #run: |
        #  echo "$INPUTS_PACKAGES"
        #  #echo "$INPUTS_PACKAGES"
        with:
         #packages: "autopoint, desktop-file-utils"
         #stringArray: 
         #- "autopoint"
         #- "desktop-file-utils"
         stringArray: '["autopoint", "desktop-file-utils"]'

      - name: Install additional packages
        env:
         #PACKAGES: autopoint desktop-file-utils
         # For autogen.sh
         PACKAGES_AUTOGEN: >
           autopoint
         # For make from
         # https://packages.ubuntu.com/search?searchon=sourcenames&keywords=ibus
         PACKAGES_MAKE: >
           desktop-file-utils
           dbus-x11
           gobject-introspection
           gtk-doc-tools
           iso-codes
           libdconf-dev
           libgirepository1.0-dev
           libglib2.0-dev
           libgtk-3-bin
           libgtk-3-dev
           libgtk2.0-dev
           libnotify-dev
           libtool
           libwayland-dev
           python-gi-dev
           python3-all
           unicode-cldr-core
           unicode-data
           valac
        run: |
          echo "## apt-get -qq update"
          sudo apt-get -qq update
          PACKAGES=$(echo "${{ env.PACKAGES_AUTOGEN }} ${{ env.PACKAGES_MAKE }}" | tr -d '\n')
          echo "## apt install -y $PACKAGES"
          sudo apt install -y $PACKAGES
          dpkg -l | grep unicode-data
          echo ${{ inputs.packages }}
          echo "${{ steps.packages.outputs.stringList }}"
          #echo "$INPUTS_PACKAGES"

      - name: Run autogen
        # configure options from
        # https://salsa.debian.org/debian/ibus/-/blob/master/debian/rules
        run: >
          ./autogen.sh
          --enable-gtk-doc
          --with-python=/usr/bin/python3
          --with-ucd-dir='/usr/share/unicode'
          --enable-install-tests

      - name: Run make
        # Set the cutom DESTDIR because the default DESTDIR
        # /home/travis/bulid/fujiwarat/$PKG/ibus/ibus-$VERSION/_inst seems to
        # be too long and failed to set DESTDIR to install
        # bindings/pygobject/IBus.py
        run: >
          make distcheck
          DISTCHECK_CONFIGURE_FLAGS="
          --enable-gtk-doc
          --disable-schemas-install
          --enable-memconf
          --with-python=/usr/bin/python3
          --with-ucd-dir='/usr/share/unicode'
          --enable-install-tests
          "
          DISABLE_GUI_TESTS="
          ibus-compose ibus-keypress test-stress xkb-latin-layouts
          "
          VERBOSE=1
          DESTDIR="$HOME/build/$USER/dest"

